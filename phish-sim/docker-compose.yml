# SPDX-License-Identifier: MIT
# Copyright (c) 2024 Phish-Sim Project

version: '3.8'

services:
  # Unified Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=info
      - REDIS_URL=redis://redis:6379
      - ML_MODEL_PATH=/app/models
      - VISUAL_MODEL_PATH=/app/visual_models
    volumes:
      - ./backend:/app
      - ./ml/models:/app/models
      - ./visual/models:/app/visual_models
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - phish-sim-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8001
      - VITE_WS_URL=ws://localhost:8001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - phish-sim-network

  # Redis Cache and Session Management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - phish-sim-network

  # ML Service (NLP)
  ml-service:
    build:
      context: ./ml
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - MODEL_PATH=/app/models
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./ml:/app
      - ./ml/models:/app/models
    depends_on:
      - redis
    networks:
      - phish-sim-network

  # Visual Analysis Service
  visual-service:
    build:
      context: ./visual
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - MODEL_PATH=/app/models
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./visual:/app
      - ./visual/models:/app/models
    depends_on:
      - redis
    networks:
      - phish-sim-network

  # Real-time Inference Service
  inference-service:
    build:
      context: ./inference
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    environment:
      - REDIS_URL=redis://redis:6379
      - ML_SERVICE_URL=http://ml-service:8002
      - VISUAL_SERVICE_URL=http://visual-service:8003
    volumes:
      - ./inference:/app
    depends_on:
      - redis
      - ml-service
      - visual-service
    networks:
      - phish-sim-network

  # Data Pipeline Service
  data-service:
    build:
      context: ./data
      dockerfile: Dockerfile
    environment:
      - DATA_PATH=/app/data
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
    networks:
      - phish-sim-network

  # Monitoring and Metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - phish-sim-network

  # Log Aggregation
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - phish-sim-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - phish-sim-network

networks:
  phish-sim-network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
  elasticsearch_data: